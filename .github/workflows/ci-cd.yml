name: FastAPI CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Step 1: Run Tests
  test:
    name: Run Tests on PRs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest httpx

      - name: Verify Pytest Collection
        run: |
          ls -R
          pytest --collect-only

      - name: Run Tests
        run: |
          pytest tests/ || (echo "Tests failed. Stopping pipeline." && exit 1)

  # Step 2: Build and Push Docker Image
  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: test  # Runs only if tests pass
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/fastapi-trade-app:latest .

      - name: Push to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/fastapi-trade-app:latest

  # Step 3: Deploy to AWS EC2
  deploy:
    name: Deploy to AWS EC2
    runs-on: ubuntu-latest
    needs: build-and-push  # Runs only if the Docker image is built successfully
    steps:
      - name: SSH into EC2 and Deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Connecting to EC2..."
            echo "Stopping old container (if running)..."
            sudo docker stop fastapi-trade-app || true
            sudo docker rm fastapi-trade-app || true
            
            echo "Pulling latest Docker image..."
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/fastapi-trade-app:latest
            
            echo "Cleaning up unused images..."
            sudo docker image prune -af
            
            echo "Running new container..."
            sudo docker run -d -p 8000:8000 \
              --env DATABASE_URL=${{ secrets.DATABASE_URL }} \
              --name fastapi-trade-app \
              ${{ secrets.DOCKER_USERNAME }}/fastapi-trade-app:latest
            
            echo "Deployment complete!"
